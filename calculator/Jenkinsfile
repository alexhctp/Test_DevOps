// Jenkinsfile
pipeline {
    // 1. Configuração do Agente
    // Define o ambiente de execução para todo o pipeline usando o Alpine Linux ao invés do Ubuntu para manter o ambiente leve.
    agent {
        docker {
            image 'alpine:3.20'
            args '-u root'
        }
    }

    // 2. Estágios do Pipeline
    // Define as principais etapas do processo de CI.
    stages {
        // Estágio nstalação das dependências necessárias para compilação e análise.
        stage('Install Dependencies') {
            steps {
                echo "Instalando compilador C++, make e ferramentas de análise..."
                sh 'apk add --no-cache build-base clang clang-extra'
            }
        }

        // Estágio para compilar a aplicação principal.
        stage('Build') {
            steps {
                echo "Compilando a aplicação..."
                sh 'make' 
            }
        }

        // Estágio para executar as verificações de qualidade de código.
        stage('Code Quality Check') {
            steps {
                echo "Executando análise estática e verificação de formato..."
                sh 'make check' 
            }
        }

        // Estágio para compilar e rodar os testes unitários.
        stage('Unit Test') {
            steps {
                echo "Executando os testes unitários..."
                sh 'make unittest' 
            }
        }
    }

    // 3. Ações Pós-execução
    // Define ações que serão executadas no final do pipeline, independentemente do resultado.
    post {
        always {
            echo "Limpando o workspace..."
            sh 'make clean'
        }
    }
}
