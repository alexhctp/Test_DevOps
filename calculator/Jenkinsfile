pipeline {
    agent {
        docker {
            image 'ubuntu:22.04'
            args '--user root'
        }
    }
    
    stages {
        stage('Setup Environment') {
            steps {
                echo 'Installing dependencies...'
                sh '''
                    apt-get update -qq
                    apt-get install -y -qq build-essential g++ clang-tidy clang-format make
                    g++ --version
                '''
            }
        }
        
        stage('Build & Test') {
            steps {
                dir('calculator') {
                    sh 'ls -la'
                    
                    // Code Quality Check
                    echo 'Running code quality checks...'
                    sh 'make check || echo "Code quality checks completed with warnings"'
                    
                    // Build
                    echo 'Building application...'
                    sh 'make clean && make'
                    
                    // Test
                    echo 'Running tests...'
                    sh 'make unittest || echo "Tests completed"'
                    
                    // Show results
                    sh 'ls -la bin/ || echo "No bin directory"'
                    sh 'ls -la tests/bin/ || echo "No test binaries"'
                }
            }
        }
        
        stage('Archive') {
            steps {
                dir('calculator') {
                    script {
                        if (fileExists('bin/calculator')) {
                            archiveArtifacts artifacts: 'bin/calculator'
                            echo 'Calculator binary archived!'
                        }
                        if (fileExists('tests/bin/')) {
                            archiveArtifacts artifacts: 'tests/bin/**'
                        }
                    }
                }
            }
        }
    }
    
    post {
        always {
            echo 'Build completed'
        }
        success {
            echo 'Build successful! ✅'
        }
        failure {
            echo 'Build failed! ❌'
        }
    }
}
